"use strict";(globalThis.webpackChunkblog2=globalThis.webpackChunkblog2||[]).push([[8416],{25952:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/my-vite-23c761291620d7bda002a4beae236bd5.webp"},31603:e=>{e.exports=JSON.parse('{"permalink":"/blog/turborepo-vite-react-module-not-found-issue-resolution","source":"@site/blog/turborepo-vite-react-module-not-found-issue-resolution.md","title":"Turborepo npm workspaces vite react module resolution error resolved","description":"From the title it sounds like a lot of cool technologies working side by side isn\'t it. Let me list them once again","date":"2022-10-05T20:48:24.000Z","tags":[{"inline":true,"label":"frontend","permalink":"/blog/tags/frontend"},{"inline":true,"label":"tooling","permalink":"/blog/tags/tooling"}],"readingTime":2.05,"hasTruncateMarker":false,"authors":[{"name":"D Balaji","title":"Lead Design Technologist","url":"https://github.com/dhbalaji","imageURL":"https://avatars.githubusercontent.com/u/3672491?v=4","key":"dhbalaji","page":null}],"frontMatter":{"title":"Turborepo npm workspaces vite react module resolution error resolved","tags":["frontend","tooling"],"date":"2022-10-05T20:48:24.000Z","authors":["dhbalaji"]},"unlisted":false,"prevItem":{"title":"Why & how to mock date methods in JEST unit tests","permalink":"/blog/mocking-dates-in-jest"},"nextItem":{"title":"Installing Ubuntu Desktop explained in 10 steps","permalink":"/blog/Installing-ubuntu-desktop-explained-in-10-steps"}}')},70497:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var t=o(96363);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},94222:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});var t=o(31603),i=o(47259),s=o(70497);const l={title:"Turborepo npm workspaces vite react module resolution error resolved",tags:["frontend","tooling"],date:new Date("2022-10-05T20:48:24.000Z"),authors:["dhbalaji"]},r=void 0,d={authorsImageUrls:[void 0]},a=[{value:"Use case scenario",id:"use-case-scenario",level:2},{value:"Glitches and resolutions",id:"glitches-and-resolutions",level:2},{value:"Resolution",id:"resolution",level:2}];function c(e){const n={code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"From the title it sounds like a lot of cool technologies working side by side isn't it. Let me list them once again"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Turborepo - managing monorepo"}),"\n",(0,i.jsx)(n.li,{children:"NPM - package manager"}),"\n",(0,i.jsx)(n.li,{children:"NPM workspaces - also provided by npm, assists in monorepo"}),"\n",(0,i.jsx)(n.li,{children:"vite - frontend tooling, rollup wrapper"}),"\n",(0,i.jsx)(n.li,{children:"vite react - template for vite"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"use-case-scenario",children:"Use case scenario"}),"\n",(0,i.jsxs)(n.p,{children:["I have a cool ",(0,i.jsx)(n.code,{children:"monorepo"})," on github which holds all my sample projects, experimental works and code sample which I play around with."]}),"\n",(0,i.jsx)(n.p,{children:"The monorepo is build with npm workspaces & turborepo. I must admit that I hardly use any turbo repo features yet. Its mostly npm workspaces and npm commands at scale."}),"\n",(0,i.jsxs)(n.p,{children:["I encountered vite for frontend tooling and wanted to give it a try. Without a second thought, I created a directory called ",(0,i.jsx)(n.code,{children:"tooling"})," and started working with ",(0,i.jsx)(n.code,{children:"vite"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"glitches-and-resolutions",children:"Glitches and resolutions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The first glitch was the node version requirement of ",(0,i.jsx)(n.code,{children:"vite"}),". I opened a new terminal and used nvm to set the node version to latest. Thats expected bug while working with latest nodeJS tools."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"vite"})," module was installed locally within the workspace. However the same ",(0,i.jsx)(n.code,{children:"vite"})," module was referenced in ",(0,i.jsx)(n.code,{children:"vite.config.js"}),". ",(0,i.jsx)(n.code,{children:"npm"})," would try to resolve ",(0,i.jsx)(n.code,{children:"vite"})," by checking in the global ",(0,i.jsx)(n.code,{children:"node_modules"})," but it would not be there."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To understand why ",(0,i.jsx)(n.code,{children:"npm"})," installed ",(0,i.jsx)(n.code,{children:"vite"})," locally instead of global ",(0,i.jsx)(n.code,{children:"node_modules"})," was easy. ",(0,i.jsx)(n.code,{children:"vite"})," was used in ",(0,i.jsx)(n.code,{children:"npm scripts"})," and if ",(0,i.jsx)(n.code,{children:"vite"})," were to be installed globally then the ",(0,i.jsx)(n.code,{children:"npm scripts"})," would fail mercilessly."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"scripts": {\r\n    "dev": "vite",\r\n    "build": "vite build",\r\n    "preview": "vite preview"\r\n  },\n'})}),"\n",(0,i.jsxs)(n.p,{children:["But the same module being used in JS modules was not expected by ",(0,i.jsx)(n.code,{children:"npm"}),", so we need to instruct ",(0,i.jsx)(n.code,{children:"npm"})," to install ",(0,i.jsx)(n.code,{children:"vite"})," in both local and global ",(0,i.jsx)(n.code,{children:"node_modules"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"resolution",children:"Resolution"}),"\n",(0,i.jsx)(n.p,{children:"At this step I found 2 ways to solve the problem."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The first way is something hinted by turborepo scaffold itself. I had to add ",(0,i.jsx)(n.code,{children:"vite"})," as dev dependency at the root of the monorepo. This would ensure that ",(0,i.jsx)(n.code,{children:"vite"})," is installed into the global ",(0,i.jsx)(n.code,{children:"node_modules"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The second way is to use an alias for ",(0,i.jsx)(n.code,{children:"vite"})," within the workspace. You can do this with the below command"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"npm i my-vite@npm:vite -P"})}),"\n",(0,i.jsxs)(n.p,{children:["This command would ensure that the package ",(0,i.jsx)(n.code,{children:"vite"})," is alias as ",(0,i.jsx)(n.code,{children:"my-vite"}),". While checking the global ",(0,i.jsx)(n.code,{children:"node_modules"})," folder, I noticed a folder with the name ",(0,i.jsx)(n.code,{children:"my-vite"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:o(25952).A+"",width:"860",height:"1144"})}),"\n",(0,i.jsxs)(n.p,{children:["The flipside is that, I need to reference the ",(0,i.jsx)(n.code,{children:"vite"})," package as ",(0,i.jsx)(n.code,{children:"my-vite"})," within the code."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { defineConfig } from "my-vite";\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);